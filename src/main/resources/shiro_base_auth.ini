[base_auth]
/u/**=anon
/user/**=kickout,simple,login
/js/**=anon
/css/**=anon 
/open/**=anon
#这个文件必须用当前开发工具打开，别双击用系统的txt文本去编辑，否则会因为乱码空指针。



#不用校验地址是否有权限
/permission/selectPermissionById.shtml=kickout,simple,login
/member/onlineDetails/**=kickout,simple,login
/role/mypermission.shtml=kickout,simple,login
/role/getPermissionTree.shtml=kickout,simple,login
/role/selectRoleByUserId.shtml=kickout,simple,login


#需要根据地址校验有无权限
/permission/**=kickout,simple,login,permission
/role/**=kickout,simple,login,permission
/member/**=kickout,simple,login,permission
#ps：kickout 是校验是否踢出的，如果嫌配置多，可以在装载的时候拼入


/**=simple,login
#三、Shiro 的默认Filter 对应的类
# Filter名称	 类路径（点击可以进入官方介绍，强烈建议看看 ）
# anon	 org.apache.shiro.web.filter.authc.AnonymousFilter
# authc	 org.apache.shiro.web.filter.authc.FormAuthenticationFilter
# authcBasic	 org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter
# logout	 org.apache.shiro.web.filter.authc.LogoutFilter
# noSessionCreation	 org.apache.shiro.web.filter.session.NoSessionCreationFilter
# perms	 org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter
# port	 org.apache.shiro.web.filter.authz.PortFilter
# rest	 org.apache.shiro.web.filter.authz.HttpMethodPermissionFilter
# roles	 org.apache.shiro.web.filter.authz.RolesAuthorizationFilter
# ssl	 org.apache.shiro.web.filter.authz.SslFilter
# user	 org.apache.shiro.web.filter.authc.UserFilter
